name: Docker Cross-Platform Tests

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    unit-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Run Unit Tests
              run: |
                  docker compose -f docker-compose.test.yml build && docker compose -f docker-compose.test.yml up -d
                  docker exec wmr-test-runner pwsh -Command "./tests/scripts/run-unit-tests.ps1 -GenerateReport"
            - name: Publish Test Results
              uses: dorny/test-reporter@v1
              if: always()
              with:
                  name: Unit Tests (Docker)
                  path: "test-results/unit-test-results.xml"
                  reporter: java-junit

    file-operation-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Run File Operation Tests
              run: |
                  docker compose -f docker-compose.test.yml build && docker compose -f docker-compose.test.yml up -d
                  docker exec wmr-test-runner pwsh -Command "./tests/scripts/run-file-operation-tests.ps1 -GenerateReport"
            - name: Publish Test Results
              uses: dorny/test-reporter@v1
              if: always()
              with:
                  name: File Operation Tests (Docker)
                  path: "test-results/file-operations-test-results.xml"
                  reporter: java-junit

    integration-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Run Integration Tests
              run: |
                  docker compose -f docker-compose.test.yml build && docker compose -f docker-compose.test.yml up -d
                  docker exec wmr-test-runner pwsh -Command "./tests/scripts/run-integration-tests.ps1 -GenerateReport"
            - name: Publish Test Results
              uses: dorny/test-reporter@v1
              if: always()
              with:
                  name: Integration Tests (Docker)
                  path: "test-results/integration-test-results.xml"
                  reporter: java-junit

    end-to-end-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Run End-to-End Tests
              run: |
                  docker compose -f docker-compose.test.yml build && docker compose -f docker-compose.test.yml up -d
                  docker exec wmr-test-runner pwsh -Command "./tests/scripts/run-end-to-end-tests.ps1 -GenerateReport"
            - name: Publish Test Results
              uses: dorny/test-reporter@v1
              if: always()
              with:
                  name: End-to-End Tests (Docker)
                  path: "test-results/e2e-test-results.xml"
                  reporter: java-junit

    docker-summary:
        runs-on: ubuntu-latest
        needs:
            [
                unit-tests,
                file-operation-tests,
                integration-tests,
                end-to-end-tests,
            ]
        if: always()
        steps:
            - name: Generate Test Summary
              run: |
                  echo "# Docker Cross-Platform Test Summary" >> $GITHUB_STEP_SUMMARY
                  echo "| Test Category | Status |" >> $GITHUB_STEP_SUMMARY
                  echo "|---------------|--------|" >> $GITHUB_STEP_SUMMARY
                  echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| File Operation Tests | ${{ needs.file-operation-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| End-to-End Tests | ${{ needs.end-to-end-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY

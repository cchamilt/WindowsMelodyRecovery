# Mock WSL Environment - Ubuntu 22.04
FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install base packages and development tools
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    vim \
    nano \
    zsh \
    bash \
    fish \
    tmux \
    htop \
    tree \
    jq \
    sqlite3 \
    build-essential \
    python3 \
    python3-pip \
    python3-venv \
    golang-go \
    rustc \
    cargo \
    openjdk-11-jdk \
    ruby \
    ruby-dev \
    php \
    composer \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 18+ (instead of the default v12)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Install Snap (mock)
RUN apt-get update && apt-get install -y snapd && rm -rf /var/lib/apt/lists/*

# Install Flatpak
RUN apt-get update && apt-get install -y flatpak && rm -rf /var/lib/apt/lists/*

# Create test user
RUN useradd -m -s /bin/bash testuser && \
    echo "testuser:testpass" | chpasswd && \
    usermod -aG sudo testuser

# Install chezmoi
RUN sh -c "$(curl -fsLS get.chezmoi.io)" -- -b /usr/local/bin

# Set up all user files as root first
WORKDIR /home/testuser

# Create .bashrc with initial content
RUN echo '# .bashrc for testuser' > /home/testuser/.bashrc && \
    echo 'export PATH="$HOME/.local/bin:$PATH"' >> /home/testuser/.bashrc && \
    echo 'alias ll="ls -la"' >> /home/testuser/.bashrc && \
    echo 'alias la="ls -A"' >> /home/testuser/.bashrc && \
    echo 'alias l="ls -CF"' >> /home/testuser/.bashrc

# Create directories and set permissions
RUN mkdir -p /home/testuser/.config/chezmoi && \
    mkdir -p /home/testuser/.ssh && \
    mkdir -p /home/testuser/projects && \
    mkdir -p /home/testuser/scripts && \
    mkdir -p /home/testuser/.local/bin && \
    chmod 700 /home/testuser/.ssh && \
    chown -R testuser:testuser /home/testuser

# Copy mock data files
COPY tests/mock-data/wsl/dotfiles/ /home/testuser/
COPY tests/mock-data/wsl/config/ /home/testuser/.config/

# Ensure proper ownership of user files
RUN chown -R testuser:testuser /home/testuser && \
    chown testuser:testuser /home/testuser/.bashrc && \
    chmod 644 /home/testuser/.bashrc

# Switch to testuser for development tools installation
USER testuser

# Install nvm (Node Version Manager)
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash

# Install pyenv (Python Version Manager)
RUN curl https://pyenv.run | bash

# Install rbenv (Ruby Version Manager)
RUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv && \
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc && \
    echo 'eval "$(rbenv init -)"' >> ~/.bashrc

# Install some pip packages for testing (as user)
RUN pip3 install --user requests flask django pytest

# Create mock git configuration
RUN git config --global user.name "Test User" && \
    git config --global user.email "test@example.com"

# Switch back to root for final setup
USER root

# Install global npm packages as root (to avoid permission issues)
# Use older versions that are compatible with Node.js 18
RUN npm install -g typescript@4.9.5 eslint@8.57.0 prettier@2.8.8

# Create mock system configuration files
COPY tests/mock-data/wsl/etc/ /etc/

# Create startup script
COPY tests/mock-scripts/wsl-startup.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/wsl-startup.sh

# Default command
CMD ["/usr/local/bin/wsl-startup.sh"] 
services:
  # Mock Windows Environment (PowerShell Core on Linux)
  windows-mock:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.windows-mock
    container_name: wmr-windows-mock
    volumes:
      - ./:/workspace
      - mock-cloud:/mock-cloud
      - ./tests/mock-data/registry:/mock-registry:ro
      - ./tests/mock-data/appdata:/mock-appdata:ro
      - ./tests/mock-data/programfiles:/mock-programfiles:ro
      # Dynamic mock data volumes (ephemeral)
      - dynamic-mock-data:/dynamic-mock-data
      - dynamic-applications:/dynamic-applications
      - dynamic-gaming:/dynamic-gaming
      - dynamic-system-settings:/dynamic-system-settings
    environment:
      - MOCK_MODE=true
      - CLOUD_PROVIDER=mock
      - CLOUD_PATH=/mock-cloud
      - BACKUP_ROOT=/workspace/test-backups
      - MACHINE_NAME=TEST-MACHINE
      - USER_PROFILE=/mock-appdata/Users/TestUser
      - PROGRAM_FILES=/mock-programfiles
      - REGISTRY_ROOT=/mock-registry
      # Dynamic mock data paths
      - DYNAMIC_MOCK_ROOT=/dynamic-mock-data
      - DYNAMIC_APPLICATIONS=/dynamic-applications
      - DYNAMIC_GAMING=/dynamic-gaming
      - DYNAMIC_SYSTEM_SETTINGS=/dynamic-system-settings
    networks:
      - wmr-test-network
    depends_on:
      - wsl-mock

  # Mock WSL Environment (Ubuntu)
  wsl-mock:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.wsl-mock
    container_name: wmr-wsl-mock
    volumes:
      - ./:/workspace
      # Static mock data (read-only)
      - ./tests/mock-data/wsl/home:/mnt/test-data/home:ro
      - ./tests/mock-data/wsl/config:/mnt/test-data/config:ro
      - ./tests/mock-data/wsl/dotfiles:/mnt/test-data/dotfiles:ro
      # Dynamic WSL mock data (ephemeral)
      - dynamic-wsl:/dynamic-wsl
      - dynamic-wsl-packages:/dynamic-wsl-packages
      - dynamic-wsl-config:/dynamic-wsl-config
    environment:
      - WSL_DISTRO_NAME=Ubuntu-22.04
      - WSL_VERSION=2
      - USER=testuser
      - HOME=/home/testuser
      - MOCK_TEST_DATA_HOME=/mnt/test-data/home
      - MOCK_TEST_DATA_CONFIG=/mnt/test-data/config
      - MOCK_TEST_DATA_DOTFILES=/mnt/test-data/dotfiles
      # Dynamic mock data paths
      - DYNAMIC_WSL_ROOT=/dynamic-wsl
      - DYNAMIC_WSL_PACKAGES=/dynamic-wsl-packages
      - DYNAMIC_WSL_CONFIG=/dynamic-wsl-config
    networks:
      - wmr-test-network
    command: /bin/bash -c "tail -f /dev/null"

  # Mock Cloud Storage Server (simulates OneDrive/Google Drive/Dropbox)
  cloud-mock:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.cloud-mock
    container_name: wmr-cloud-mock
    ports:
      - "3000:3000"
    volumes:
      - mock-cloud:/cloud-storage
      - ./tests/mock-data:/mock-data:ro
      # Dynamic cloud mock data
      - dynamic-cloud:/dynamic-cloud
    environment:
      - CLOUD_TYPE=multi
      - ONEDRIVE_PATH=/cloud-storage/OneDrive
      - GOOGLEDRIVE_PATH=/cloud-storage/GoogleDrive
      - DROPBOX_PATH=/cloud-storage/Dropbox
      - DYNAMIC_CLOUD_ROOT=/dynamic-cloud
    networks:
      - wmr-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 10s
      retries: 5

  # Test Runner (PowerShell with Pester)
  test-runner:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.test-runner
    container_name: wmr-test-runner
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - mock-cloud:/mock-cloud
      - ./test-results:/test-results
      # Static mock data (read-only)
      - ./tests/mock-data/registry:/mock-registry:ro
      - ./tests/mock-data/appdata:/mock-appdata:ro
      - ./tests/mock-data/programfiles:/mock-programfiles:ro
      - ./tests/mock-data/steam:/mock-steam:ro
      - ./tests/mock-data/epic:/mock-epic:ro
      - ./tests/mock-data/gog:/mock-gog:ro
      - ./tests/mock-data/ea:/mock-ea:ro
      # Dynamic mock data volumes (ephemeral)
      - dynamic-mock-data:/dynamic-mock-data
      - dynamic-applications:/dynamic-applications
      - dynamic-gaming:/dynamic-gaming
      - dynamic-system-settings:/dynamic-system-settings
      - dynamic-wsl:/dynamic-wsl
      - dynamic-wsl-packages:/dynamic-wsl-packages
      - dynamic-cloud:/dynamic-cloud
    environment:
      - PESTER_OUTPUT_PATH=/test-results
      - MOCK_WINDOWS_HOST=wmr-windows-mock
      - MOCK_WSL_HOST=wmr-wsl-mock
      - MOCK_CLOUD_HOST=wmr-cloud-mock
      # Dynamic mock data paths
      - DYNAMIC_MOCK_ROOT=/dynamic-mock-data
      - DYNAMIC_APPLICATIONS=/dynamic-applications
      - DYNAMIC_GAMING=/dynamic-gaming
      - DYNAMIC_SYSTEM_SETTINGS=/dynamic-system-settings
      - DYNAMIC_WSL_ROOT=/dynamic-wsl
      - DYNAMIC_WSL_PACKAGES=/dynamic-wsl-packages
      - DYNAMIC_CLOUD_ROOT=/dynamic-cloud
    networks:
      - wmr-test-network
    depends_on:
      - windows-mock
      - wsl-mock
      - cloud-mock

  # Gaming Platform Mocks
  gaming-mock:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.gaming-mock
    container_name: wmr-gaming-mock
    volumes:
      - mock-steam:/mock-steam
      - mock-epic:/mock-epic
      - mock-gog:/mock-gog
      - mock-ea:/mock-ea
      # Dynamic gaming mock data
      - dynamic-gaming:/dynamic-gaming
    environment:
      - STEAM_PATH=/mock-steam
      - EPIC_PATH=/mock-epic
      - GOG_PATH=/mock-gog
      - EA_PATH=/mock-ea
      - DYNAMIC_GAMING_ROOT=/dynamic-gaming
    networks:
      - wmr-test-network

  # Package Manager Mocks
  package-mock:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.package-mock
    container_name: wmr-package-mock
    volumes:
      - mock-chocolatey:/mock-chocolatey
      - mock-scoop:/mock-scoop
      - mock-winget:/mock-winget
      # Dynamic package manager mock data
      - dynamic-applications:/dynamic-applications
    environment:
      - CHOCOLATEY_PATH=/mock-chocolatey
      - SCOOP_PATH=/mock-scoop
      - WINGET_PATH=/mock-winget
      - DYNAMIC_APPLICATIONS_ROOT=/dynamic-applications
    networks:
      - wmr-test-network

volumes:
  # Existing persistent volumes
  mock-cloud:
  mock-steam:
  mock-epic:
  mock-gog:
  mock-ea:
  mock-chocolatey:
  mock-scoop:
  mock-winget:
  
  # NEW: Dynamic mock data volumes (ephemeral - deleted on docker-compose down)
  dynamic-mock-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1g,uid=1000,gid=1000
  
  dynamic-applications:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=512m,uid=1000,gid=1000
  
  dynamic-gaming:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=512m,uid=1000,gid=1000
  
  dynamic-system-settings:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=256m,uid=1000,gid=1000
  
  dynamic-wsl:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=512m,uid=1000,gid=1000
  
  dynamic-wsl-packages:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=256m,uid=1000,gid=1000
  
  dynamic-wsl-config:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=128m,uid=1000,gid=1000
  
  dynamic-cloud:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=256m,uid=1000,gid=1000

networks:
  wmr-test-network:
    driver: bridge 
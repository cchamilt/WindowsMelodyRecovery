metadata:
  name: "Touchpad Settings"
  description: "Backup and restore touchpad configuration including precision touchpad settings, gestures, device drivers, and hardware parameters"
  author: "Windows Melody Recovery"
  version: "1.0.0"

prerequisites:
  - type: script
    name: "Touchpad System Available"
    inline_script: |
      try {
          Get-Command Get-PnpDevice -ErrorAction Stop | Out-Null
          Write-Output "Touchpad system available"
      } catch {
          Write-Output "Touchpad system not available"
      }
    expected_output: "Touchpad system available"
    on_missing: warn

registry:
  # Windows Precision Touchpad Settings
  - name: "User Precision Touchpad Settings"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad'
    type: key
    action: sync
    dynamic_state_path: "registry/user_precision.json"

  - name: "System Precision Touchpad Settings"
    path: 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\PrecisionTouchPad'
    type: key
    action: sync
    dynamic_state_path: "registry/system_precision.json"

  # Mouse Properties (affects touchpad)
  - name: "Mouse Control Panel Settings"
    path: 'HKCU:\Control Panel\Mouse'
    type: key
    action: sync
    dynamic_state_path: "registry/mouse_settings.json"

  - name: "System Mouse Settings"
    path: 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\ControlPanel\Mouse'
    type: key
    action: sync
    dynamic_state_path: "registry/system_mouse.json"

  # Touchpad-specific Settings
  - name: "Touchpad Settings"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\TouchpadSettings'
    type: key
    action: sync
    dynamic_state_path: "registry/touchpad_settings.json"

  - name: "Precision Touchpad Status"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\Status'
    type: key
    action: sync
    dynamic_state_path: "registry/status.json"

  - name: "Scrolling Settings"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\ScrollingSettings'
    type: key
    action: sync
    dynamic_state_path: "registry/scrolling.json"

  - name: "Tapping Settings"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\TappingSettings'
    type: key
    action: sync
    dynamic_state_path: "registry/tapping.json"

  - name: "Three Finger Gestures"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\ThreeFingerGestureSettings'
    type: key
    action: sync
    dynamic_state_path: "registry/three_finger.json"

  - name: "Four Finger Gestures"
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\FourFingerGestureSettings'
    type: key
    action: sync
    dynamic_state_path: "registry/four_finger.json"

  # Vendor-specific Touchpad Settings
  - name: "Synaptics System Settings"
    path: 'HKLM:\SOFTWARE\Synaptics'
    type: key
    action: sync
    dynamic_state_path: "registry/synaptics_system.json"

  - name: "Synaptics User Settings"
    path: 'HKCU:\Software\Synaptics'
    type: key
    action: sync
    dynamic_state_path: "registry/synaptics_user.json"

  - name: "Elantech System Settings"
    path: 'HKLM:\SOFTWARE\Elantech'
    type: key
    action: sync
    dynamic_state_path: "registry/elantech_system.json"

  - name: "Elantech User Settings"
    path: 'HKCU:\Software\Elantech'
    type: key
    action: sync
    dynamic_state_path: "registry/elantech_user.json"

  - name: "Alps System Settings"
    path: 'HKLM:\SOFTWARE\Alps'
    type: key
    action: sync
    dynamic_state_path: "registry/alps_system.json"

  - name: "Alps User Settings"
    path: 'HKCU:\Software\Alps'
    type: key
    action: sync
    dynamic_state_path: "registry/alps_user.json"

  # Input Settings
  - name: "User Input Settings"
    path: 'HKCU:\Software\Microsoft\Input'
    type: key
    action: sync
    dynamic_state_path: "registry/user_input.json"

  - name: "System Input Settings"
    path: 'HKLM:\SOFTWARE\Microsoft\Input'
    type: key
    action: sync
    dynamic_state_path: "registry/system_input.json"

  - name: "Tablet Input Settings"
    path: 'HKCU:\Software\Microsoft\TabletTip'
    type: key
    action: sync
    dynamic_state_path: "registry/tablet_tip_user.json"

  - name: "System Tablet Settings"
    path: 'HKLM:\SOFTWARE\Microsoft\TabletTip'
    type: key
    action: sync
    dynamic_state_path: "registry/tablet_tip_system.json"

applications:
  # Touchpad Device Discovery
  - name: "Touchpad Devices"
    discovery_command: |
      try {
          Get-PnpDevice | Where-Object { 
              ($_.Class -eq "Mouse" -or $_.Class -eq "HIDClass") -and 
              ($_.FriendlyName -match "touchpad|synaptics|elan|precision|alps" -or
               $_.Manufacturer -match "synaptics|elan|alps|microsoft")
          } | Select-Object InstanceId, FriendlyName, Manufacturer, Status, Class, DeviceID, ConfigManagerErrorCode | ConvertTo-Json -Depth 10
      } catch {
          Write-Output "[]"
      }
    parse_script: |
      $devices = $State | ConvertFrom-Json
      return @{
          TouchpadDeviceCount = $devices.Count
          EnabledDevices = ($devices | Where-Object { $_.Status -eq "OK" }).Count
          Manufacturers = $devices | Group-Object Manufacturer | ForEach-Object { "$($_.Name): $($_.Count)" }
          DeviceTypes = $devices | Group-Object Class | ForEach-Object { "$($_.Name): $($_.Count)" }
      }
    dynamic_state_path: "applications/devices.json"

  - name: "Precision Touchpad Status"
    discovery_command: |
      try {
          $precisionEnabled = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\Status" -Name "Enabled" -ErrorAction SilentlyContinue
          $touchpadEnabled = Get-ItemProperty -Path "HKCU:\Control Panel\Mouse" -Name "MouseSensitivity" -ErrorAction SilentlyContinue
          $gestureSettings = Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\PrecisionTouchPad\ThreeFingerGestureSettings" -ErrorAction SilentlyContinue
          
          @{
              PrecisionTouchpadEnabled = if ($precisionEnabled) { [bool]$precisionEnabled.Enabled } else { $false }
              MouseSensitivity = if ($touchpadEnabled) { $touchpadEnabled.MouseSensitivity } else { $null }
              HasGestureSettings = [bool]$gestureSettings
              ThreeFingerSwipeEnabled = if ($gestureSettings) { $gestureSettings.SwipeEnabled } else { $null }
          } | ConvertTo-Json -Depth 10
      } catch {
          Write-Output "{}"
      }
    parse_script: |
      $status = $State | ConvertFrom-Json
      return @{
          IsPrecisionTouchpadEnabled = $status.PrecisionTouchpadEnabled
          CurrentMouseSensitivity = $status.MouseSensitivity
          HasConfiguredGestures = $status.HasGestureSettings
          GesturesEnabled = $status.ThreeFingerSwipeEnabled
      }
    dynamic_state_path: "applications/precision_status.json"

  - name: "Touchpad Services Status"
    discovery_command: |
      try {
          $services = Get-Service | Where-Object { 
              $_.Name -match "touchpad|synaptics|elan|alps|hid" -or
              $_.DisplayName -match "touchpad|precision|gesture"
          } | Select-Object Name, DisplayName, Status, StartType | ConvertTo-Json -Depth 10
          if (-not $services) { $services = "[]" }
          $services
      } catch {
          Write-Output "[]"
      }
    parse_script: |
      $services = $State | ConvertFrom-Json
      return @{
          TouchpadServiceCount = $services.Count
          RunningServices = ($services | Where-Object { $_.Status -eq "Running" }).Count
          AutomaticServices = ($services | Where-Object { $_.StartType -eq "Automatic" }).Count
          ServiceNames = $services | ForEach-Object { $_.Name }
      }
    dynamic_state_path: "applications/services.json"

cleanup:
  - name: "Touchpad Settings Notification"
    type: script
    inline_script: |
      Write-Host "Touchpad settings have been restored." -ForegroundColor Green
      Write-Host "You may need to restart or re-plug external mice for all changes to take effect." -ForegroundColor Yellow
      Write-Host "Precision touchpad gestures will be active immediately." -ForegroundColor Green 